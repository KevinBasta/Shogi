To do: 
implement piece stands
define capture and drop mechanism
define promotion (option to promote once at oppostie 3 squares)
    -auto promote at the end of other side for some pieces
    -ask if they want to promote
define illigal movements (no two pawns in a file (drop), can't move king into danger(movements))

make mechanism for keeping track of movements (current state of board vs previous)

********* account for piece drop clearing a checkmate



Next steps: 
Make all client pieces unclickable when picking to promote or not
get all possible moves for all pieces of the other player to check if this 
players king is in check
When a player's move threatens to capture the opposing king on the next turn,
the move is said to give check to the king and the king is said to be in check.
If a player's king is in check, that player's responding move must remove 
the check if possible.[6] Ways to remove a check include moving the king away 
from the threat, capturing the threatening piece, or placing another 
interposing piece between the king and the threatening piece.

If the king is in check and there is no possible move which could 
protect the king, the move is said to checkmate (tsumi 詰み) the king. 
Checkmate effectively means that the opponent wins the game as the player 
would have no remaining legal moves.




Restrictions. There are three restrictions on dropping pieces; the last two of these apply only to pawns:
Piece with No Moves (Japanese: 行き所のない駒 ikidokorononaikoma): Pawns, lances and knights may not be dropped onto the last (9th) rank, and knights may not be dropped onto the penultimate (8th) rank; this is because such dropped pieces would have no legal moves on subsequent turns (as they can only move in the forward direction).
Two Pawns (Japanese: 二歩 nifu): A pawn may not be dropped onto a file (column) containing another unpromoted pawn of the same player (promoted pawns do not count).
Drop Pawn Mate (Japanese: 打ち歩詰め uchifudzume): A pawn may not be dropped to give an immediate checkmate. (This rule only applies specifically to pawns, drops and checkmates − to clarify, a player may deliver an immediate checkmate by dropping a non-pawn piece, a player may checkmate a king with a pawn that is already on the board, and a pawn may be dropped to give an immediate check as long as it does not also result in checkmate.)



Illegal moves include:
Violating the Two Pawns (nifu) restriction (See §Drops above.)
Violating the Drop Pawn Mate (uchifuzume) restriction
Dropping or moving a piece to position where it cannot move (such as dropping a knight to an opponent's last two ranks, etc.)
Dropping a piece with its promoted value
Playing out of turn, e.g. making more than one move or white moving first instead of moving second.
Making perpetual check four times (cf. sennichite)
Leaving one's king in check, or moving one's king into check
Moving a piece contrary to how its movements are defined (for example, moving a gold like a silver, or moving an unpromoted bishop off its legal diagonal)



Promoting a piece changes the way it moves. The various pieces promote as follows:
A silver general, knight, lance, or pawn has its normal power of movement replaced by that of a gold general.
A rook or bishop keeps its original movement and gains the power to move one square in any direction (like a king). For a promoted bishop, this means it is able to reach any square on the board, given enough moves.
A king or a gold general does not promote; nor can a piece that is already promoted.
When captured, a piece loses its promoted status. Otherwise promotion is permanent.



future ideas: 
simple algorithm to play against
implement already existing shogi algorithms 
ai? 
be able to play both sides




// Notes from bobard.js
// sparate game mechanics from ui
// make functions to reload gameboard and standpieces based on objects

/* 2 player objects created that have the gote or sente property
   to allow for piece movemnts in online multiplayer, offline multiplayer, 
   and player vs computer. 

   The player class can have the properties of pices in possetion, pices captured, etc..
   
   the second player can have the property of a real player or a bot or 
   it can also be a different computer player object that gets initialized instead
   of a player or maybe it's just inheritance of the class player.
   
   look up the input/output for already existing shogi bots to integrate in design
   */ 

/* game object created at the start of each game that takes the mode and 
   determiens how to set stuff up. */


board js function may use later 
    // Unused
    checkIfKingInCheck(pieceMovedPosition) { 
        let possibleMoves = this.gameBoard[pieceMovedPosition].getPossibleMoves(false);
        let localSenteCheck = false; 
        let localGoteCheck = false;

        console.log(possibleMoves);
        for (let cell of possibleMoves) {
            console.log("bing bong bing bong")
            console.log(cell)
            if (cell in this.gameBoard) {
                if (this.gameBoard[cell].getType() === "King") {
                    console.log("sente checked")
                    this.gameBoard[cell].check();
                    this.checkingPiece = this.gameBoard[pieceMovedPosition];
                    localSenteCheck = true;
                } else if (this.gameBoard[cell].getType() === "ChallengingKing") {
                    console.log("gote checked")
                    this.gameBoard[cell].check();
                    this.checkingPiece = this.gameBoard[pieceMovedPosition];
                    localGoteCheck = true;
                }
            }
        }

        console.log("gote: " + this.checked["gote"])
        console.log("sente: " + this.checked["sente"])
        return {"gote": localGoteCheck, "sente": localSenteCheck};
    }